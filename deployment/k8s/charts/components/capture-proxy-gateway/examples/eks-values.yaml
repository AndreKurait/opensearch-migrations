# Example values file for EKS deployment

# EKS-specific configuration
service:
  enabled: true
  type: LoadBalancer
  # Example of backend protocol support (Gateway API v1.2 feature)
  # appProtocol: "kubernetes.io/ws"  # WebSocket over cleartext
  # backendAppProtocol: "kubernetes.io/ws"  # WebSocket over cleartext
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    # Uncomment to enable cross-zone load balancing
    # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"

# Gateway API configuration
gatewayApi:
  enabled: true
  gatewayClassName: "envoy-gateway"
  name: "capture-proxy-gateway"
  namespace: "default"
  # Example of Gateway infrastructure configuration (Gateway API v1.2 feature)
  # infrastructure:
  #   labels:
  #     istio-injection: enabled
  #   annotations:
  #     linkerd.io/inject: enabled
  listeners:
    - name: http
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: Same
    # Uncomment to enable HTTPS
    # - name: https
    #   port: 443
    #   protocol: HTTPS
    #   allowedRoutes:
    #     namespaces:
    #       from: Same
    #   tls:
    #     mode: Terminate
    #     certificateRefs:
    #       - name: capture-proxy-cert
    #         kind: Secret
  httpRoutes:
    - name: "capture-proxy-route"
      hostnames:
        - "capture-proxy.example.com"
      rules:
        - name: "main-route"  # Named rule (Gateway API v1.2 feature)
          matches:
            - path:
                type: PathPrefix
                value: /
          # Example of timeouts (Gateway API v1.2 feature)
          # timeouts:
          #   request: 300ms
          # Example of retry policy (Gateway API v1.2 feature)
          # retry:
          #   codes:
          #     - 500
          #     - 502
          #     - 503
          #     - 504
          #   attempts: 3
          #   backoff: 500ms
          backendRefs:
            - name: capture-proxy
              port: 9200
              # Example of request mirroring (Gateway API v1.2 feature)
              # filters:
              #   - type: RequestMirror
              #     requestMirror:
              #       backendRef:
              #         name: capture-proxy-mirror
              #         port: 9200
              #       percent: 10  # Mirror 10% of traffic

# TLS configuration (uncomment to enable)
# tls:
#   enabled: true
#   certManager:
#     enabled: true
#     issuerName: "letsencrypt-prod"
#     issuerKind: "ClusterIssuer"

# Envoy Gateway configuration
envoyGateway:
  install: true
  version: "1.1.0"
  namespace: "envoy-gateway-system"
  repository: "oci://docker.io/envoyproxy/gateway-helm"
  chartName: "gateway-helm"
  values:
    provider:
      kubernetes:
        gatewayAPIVersion: "v1"
        rateLimitEnabled: true

# Capture Proxy configuration
capture-proxy:
  parameters:
    destinationUri:
      value: "http://your-source-cluster:9200"
    kafkaConnection:
      value: "your-kafka-bootstrap:9092"
    insecureDestination:
      value: true
