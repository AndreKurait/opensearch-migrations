apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: bulk-load
  # add labels later w/ patch
spec:
  serviceAccountName: argo-workflow-executor
  entrypoint: run-bulk-load

  templates:
    - name: run-bulk-load-from-config
      inputs:
        parameters:
          # Required parameters (no default names)
          - name: target-config
            description: "Target host config object"
            default: ""
          - name: snapshot-name
            default: "WRONG"
            description: "Name of the snapshot to use (required)"
          - name: session-name
            default: "WRONG"
            description: "Name of the unique session to disambiguate coordinating indices"
          - name: optional-configs
            description: "JSON Key-Value form of all of the optional parameters to run-bulk-load"
            default: ""
      steps:
        - - name: run-bulk-load
            template: run-bulk-load
            arguments:
              parameters:
                - name: target-host
                  value: "{{=fromJSON(inputs.parameters['target-config'])['endpoint']}}"
                - name: snapshot-name
                  value: "{{inputs.parameters.snapshot-name}}"
                - name: session-name
                  value: "{{inputs.parameters.session-name}}"
                  # TODO - parse the other stuff out and into the args.

    - name: run-bulk-load
      inputs:
        parameters:
          # Required parameters (no default names)
          - name: session-name
            description: "Name of the unique session to disambiguate coordinating indices"
          - name: target-host
            description: "Target host URL (required)"
          - name: snapshot-name
            description: "Name of the snapshot to use (required)"

          # Parameters with defaults - split into input and default pairs
          - name: replicas
            value: ""
            description: "Number of replicas to create"
          - name: default-replicas
            value: "1"
            description: "Default number of replicas"

          - name: image
            value: ""
            description: "Container image to use"
          - name: default-image
            value: "migrations/reindex_from_snapshot:latest"
            description: "Default container image"

          - name: documents-per-bulk-request
            value: ""
            description: "Number of documents per bulk request"

          - name: lease-duration
            value: ""
            description: "Initial lease duration"

          - name: target-insecure
            value: ""
            description: "Flag for insecure target connections"

          - name: target-username
            value: ""
            description: "Username for target authentication"

          - name: target-password
            value: ""
            description: "Password for target authentication"

          - name: doc-transformer-base64
            value: ""
            description: "Encoded transformer configuration"

          - name: index-allowlist
            value: ""
            description: "Indices to migrate"
      steps:
        - - name: create-replicaset
            template: create-rs
            arguments:
              parameters:
                # Required parameters - pass directly
                - name: target-host
                  value: "{{inputs.parameters.target-host}}"
                - name: snapshot-name
                  value: "{{inputs.parameters.snapshot-name}}"
                - name: session-name
                  value: "{{inputs.parameters.session-name}}"
                - name: replicas
                  value: "{{=inputs.parameters.replicas == '' ? inputs.parameters['default-replicas'] : inputs.parameters.replicas}}"
                - name: image
                  value: "{{=inputs.parameters.image == '' ? inputs.parameters['default-image'] : inputs.parameters.image}}"
                - name: documents-per-bulk-request
                  value: "{{inputs.parameters.documents-per-bulk-request}}"
                - name: lease-duration
                  value: "{{inputs.parameters.lease-duration}}"
                - name: target-insecure
                  value: "{{inputs.parameters.target-insecure}}"
                - name: target-username
                  value: "{{inputs.parameters.target-username}}"
                - name: target-password
                  value: "{{inputs.parameters.target-password}}"
                - name: doc-transformer-base64
                  value: "{{inputs.parameters.doc-transformer-base64}}"
                - name: index-allowlist
                  value: "{{inputs.parameters.index-allowlist}}"

        - - name: wait-for-completion
            template: check-completion
            arguments:
              parameters:
                - name: session-name
                  value: "{{inputs.parameters.session-name}}"

        - - name: cleanup-replicaset
            template: delete-rs
            arguments:
              parameters:
                - name: name
                  value: "{{inputs.parameters.session-name}}"


    - name: create-rs
      inputs:
        parameters:
          - name: target-host
          - name: snapshot-name
          - name: session-name
          - name: replicas
          - name: image
          - name: documents-per-bulk-request
          - name: lease-duration
          - name: target-insecure
          - name: target-username
          - name: target-password
          - name: doc-transformer-base64
          - name: index-allowlist
      resource:
        action: create
        manifest: |
          apiVersion: apps/v1
          kind: ReplicaSet
          metadata:
            generateName: rfs-
          spec:
            replicas: {{inputs.parameters.replicas}}
            selector:
              matchLabels:
                app: bulk-loader
            template:
              metadata:
                labels:
                  app: bulk-loader
              spec:
                containers:
                - name: bulk-loader
                  image: {{inputs.parameters.image}}
                  imagePullPolicy: IfNotPresent
                  env:
                    - name: TARGET_HOST
                      value: "{{inputs.parameters.target-host}}"
                    - name: SNAPSHOT_NAME
                      value: "{{inputs.parameters.snapshot-name}}"
                    - name: SESSION_NAME
                      value: "{{inputs.parameters.session-name}}"
                    - name: DOCUMENTS_PER_BULK_REQUEST
                      value: "{{inputs.parameters.documents-per-bulk-request}}"
                    - name: LEASE_DURATION
                      value: "{{inputs.parameters.lease-duration}}"
                    - name: LUCENE_DIR
                      value: "/tmp"
                    - name: SNAPSHOT_LOCAL_DIR
                      value: "/snapshot"
                    - name: TARGET_INSECURE
                      value: "{{inputs.parameters.target-insecure}}"
                    - name: TARGET_USERNAME
                      value: "{{inputs.parameters.target-username}}"
                    - name: TARGET_PASSWORD
                      value: "{{inputs.parameters.target-password}}"
                    - name: DOC_TRANSFORMER_BASE64
                      value: "{{inputs.parameters.doc-transformer-base64}}"
                    - name: INDEX_ALLOW_LIST
                      value: "{{inputs.parameters.index-allowlist}}"
                  command:
                    - "/bin/sh"
                    - "-c"
                    - |
                      set -e
                      ARGS=""
                      ARGS="${ARGS}${DOCUMENTS_PER_BULK_REQUEST:+ --documentsPerBulkRequest $DOCUMENTS_PER_BULK_REQUEST}"
                      ARGS="${ARGS}${INITIAL_LEASE_DURATION:+ --initialLeaseDuration $INITIAL_LEASE_DURATION}"
                      ARGS="${ARGS}${LUCENE_DIR:+ --luceneDir $LUCENE_DIR}"
                      ARGS="${ARGS}${SESSION_NAME:+ --sessionName $SESSION_NAME}"
                      ARGS="${ARGS}${SNAPSHOT_LOCAL_DIR:+ --snapshotLocalDir $SNAPSHOT_LOCAL_DIR}"
                      ARGS="${ARGS}${SNAPSHOT_NAME:+ --snapshotName $SNAPSHOT_NAME}"
                      ARGS="${ARGS}${TARGET_HOST:+ --targetHost $TARGET_HOST}"
                      ARGS="${ARGS}${TARGET_PASSWORD:+ --targetPassword $TARGET_PASSWORD}"
                      ARGS="${ARGS}${TARGET_USERNAME:+ --targetUsername $TARGET_USERNAME}"
                      ARGS="${ARGS}${DOC_TRANSFORMER_BASE64:+ --docTransformerConfigBase64 $DOC_TRANSFORMER_BASE64}"
                      ARGS="${ARGS}${INDEX_ALLOW_LIST:+ --indexAllowList $INDEX_ALLOW_LIST}"
          
                      # Special handling for boolean flag
                      if [ "$TARGET_INSECURE" = "true" ] || [ "$TARGET_INSECURE" = "1" ]; then
                          ARGS="${ARGS} --targetInsecure"
                      fi
          
                      export RFS_COMMAND="/rfs-app/runJavaWithClasspath.sh org.opensearch.migrations.RfsMigrateDocuments $ARGS"
                      exec /rfs-app/entrypoint.sh

    - name: check-completion
      inputs:
        parameters:
          - name: session-name
      container:
        image: migrations/migration_console:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args: # dummy check for now
          - |
            sleep 10 
            if [[ "SUCCESS" == "SUCCESS" ]]; then
              echo "Work for {{inputs.parameters.session-name}} completed successfully"
              exit 0
            else
              echo "Work not yet complete (state: $state), retrying..."
              exit 1  # This will trigger a retry
            fi


    - name: delete-rs
      inputs:
        parameters:
          - name: name
      resource:
        action: delete
        flags: ["--ignore-not-found"]
        manifest: |
          apiVersion: apps/v1
          kind: ReplicaSet
          metadata:
            name: "bulk-loader-{{inputs.parameters.name}}"