receivers:
  otlp:
    protocols:
      grpc:

processors:
  batch:
    timeout: 10s
    send_batch_size: 8192
    send_batch_max_size: 10000
  attributes:
    # This processor is currently renaming two attributes
    # that are prefixed with `log4j.context_data.` to the base attribute name
    # to make queries within OpenSearch clearer. Both the `insert from_attribute`
    # and the `delete` actions will fail silently if the attribute is not present,
    # which means that these are safe for events that both do and don't have these
    # attributes. This pattern should be extended to all of our standard attributes.
    actions:
      - key: event
        from_attribute: log4j.context_data.event
        action: insert
      - key: log4j.context_data.event
        action: delete
      - key: channel_id
        from_attribute: log4j.context_data.channel_id
        action: insert
      - key: log4j.context_data.channel_id
        action: delete
      # The following actions convert various should-be-int strings to ints
      - key: log4j.context_data.source_http_status
        action: convert
        converted_type: int
      - key: log4j.context_data.target_http_status
        action: convert
        converted_type: int
      - key: log4j.context_data.http_status_match
        action: convert
        converted_type: int

extensions:
  basicauth/client:
    client_auth:
      username: "admin"
      password: "admin"
  health_check:
  zpages:
    endpoint: :55679

exporters:
  logging:
    verbosity: debug

  awsemf:
    namespace: 'TrafficCaptureReplay'
  prometheus:
    endpoint: "0.0.0.0:8889"
    send_timestamps: true
    metric_expiration: 5m
    enable_open_metrics: true

  awsxray:
  otlp/jaeger: # Jaeger supports OTLP directly. The default port for OTLP/gRPC is 4317
    endpoint: jaeger:4317
    tls:
      insecure: true

  opensearch:
    namespace: migrations
    http:
      endpoint: "https://opensearchanalytics:9200"
      auth:
        authenticator: basicauth/client
      tls:
        insecure_skip_verify: true

service:
  extensions: [ zpages, health_check, basicauth/client ]
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ otlp/jaeger, awsxray ]
    metrics:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ logging, prometheus, awsemf ]
    logs:
      receivers: [otlp]
      processors: [attributes]
      exporters: [logging, debug, opensearch]